Problem statement
Alice has two numbers, 'X' and 'Y'. He is asked to perform the following operations any number of times.
Alice adds 1 to 'X' if 'X' is odd. Alice adds 2 to 'X' if 'X' is even. Will he be able to make 'X' equal to 'Y'?
Return 1 if 'X' can be made equal to 'Y' using the above operations any number of times(possibly 0) and 0 otherwise.
Note: Assume 1-based indexing.
For example:
Let 'X' = 3 and 'Y' = 6, Alice adds 1 to 'X' since 'X' is odd. Now 'X' will become 4. Then, Alice will add 2 to 'X', since 'X' is even, and it will become 6. 'X' becomes equal to 'Y'. Hence we will return 1 as the answer.
Detailed explanation ( Input/output format, Notes, Images )
Constraints:-
1 <= 'T' <= 10
1 <= 'X', 'Y' <= 10^9
Time Limit: 1 sec
Sample Input 1:-
2
4 8
1 1
Sample Output 1:-
1
1
Explanation of sample input 1:-
First test case:- 
In 1st operation, Alice will add 2 to 'X' as 'X' is even. Now, 'X' is 6. Again, in the 2nd operation, Alice will add 2 to 'X'. Now 'X' is 8, which is equal to 'Y'. So, the answer is 1.
Second test case:-
'X' is already equal to 'Y'. So, the answer is 1.
Sample Input 2:-
2
4 9 
7 8
Sample Output 2:-
0
1
------------------------------------------------------------------------------------------------------------------------------------
def isPossible(x, y):
    if x <= y:
        if (y == 1 and x == 1) or x == y:
            return 1
        elif y % 2 == 0:
            return 1
        else:
            return 0
    else:
        return 0

------------------------------------------------------------------------------------------------------------------------------------
def isPossible(x: int, y: int) -> int:
    # Write your solution here.
    if x==y:
        return 1
    if x>y:
        return 0
    if y%2==0 and x%2==0:
        return 1
    if y%2==1 and x%2==0:
        return 0
    if y%2==0 and x%2==1:
        return 1
    return 0












