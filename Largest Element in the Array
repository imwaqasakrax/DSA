Problem statement
Given an array ‘arr’ of size ‘n’ find the largest element in the array.
Example:
Input: 'n' = 5, 'arr' = [1, 2, 3, 4, 5]
Output: 5
Explanation: From the array {1, 2, 3, 4, 5}, the largest element is 5.
Detailed explanation ( Input/output format, Notes, Images )
Sample input 1:
6
4 7 8 6 7 6 
Sample output 1:
8
Explanation of sample input 1:
The answer is 8.
From {4 7 8 6 7 6}, 8 is the largest element.
Sample input 2:
8
5 9 3 4 8 4 3 10 
Sample output 2:
10
Expected Time Complexity:
O(n), Where ‘n’ is the size of an input array ‘arr’.
Constraints :
1 <= 'n' <= 10^5
1 <= 'arr[i]' <= 10^9
Time Limit: 1 sec
Hints:
Think about how to iterate through the array and keep track of the largest element encountered so far.
------------------------------------------------------------------------------------------------------------------------------------------
from sys import *
from collections import *
from math import *

def largestElement(arr: [], n: int) -> int:
    n = len(arr)
    max_val = arr[0]  
    for number in arr:  
        if number > max_val:  
            max_val = number
    return max_val
------------------------------------------------------------------------------------------------------------------------------------------
from sys import *
from collections import *
from math import *

def largestElement(arr: [], n: int) -> int:
    max_element = max(arr)
    return max_element  





